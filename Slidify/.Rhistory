round(apply(betas, 1, sd), 5)
##doesn't depend on which y you use,
y <- x1 + rnorm(n, sd = .3)
a <- summary(lm(y ~ x1))$cov.unscaled[2,2]
c(summary(lm(y ~ x1 + x2))$cov.unscaled[2,2],
summary(lm(y~ x1 + x2 + x3))$cov.unscaled[2,2]) / a
temp <- apply(betas, 1, var); temp[2 : 3] / temp[1]
data(swiss);
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
a <- summary(fit1)$cov.unscaled[2,2]
fit2 <- update(fit, Fertility ~ Agriculture + Examination)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education)
c(summary(fit2)$cov.unscaled[2,2],
summary(fit3)$cov.unscaled[2,2]) / a
##VIFs
library(car)
fit <- lm(Fertility ~ . , data = swiss)
vif(fit)
sqrt(vif(fit)) #I prefer sd
##Nested model testing in R
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education)
fit5 <- update(fit, Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality)
anova(fit1, fit3, fit5)
install.packages(car)
install.packages("car")
install.packages("car")
n <- 100
plot(c(1, n), 0 : 1, type = "n", frame = FALSE, xlab = "p", ylab = "R^2")
r <- sapply(1 : n, function(p)
{
y <- rnorm(n); x <- matrix(rnorm(n * p), n, p)
summary(lm(y ~ x))$r.squared
}
)
lines(1 : n, r, lwd = 2)
abline(h = 1)
n <- 100
plot(c(1, n), 0 : 1, type = "n", frame = FALSE, xlab = "p", ylab = "R^2")
r <- sapply(1 : n, function(p)
{
y <- rnorm(n); x <- matrix(rnorm(n * p), n, p)
summary(lm(y ~ x))$r.squared
}
)
lines(1 : n, r, lwd = 2)
abline(h = 1)
n <- 100; nosim <- 1000
x1 <- rnorm(n); x2 <- rnorm(n); x3 <- rnorm(n);
betas <- sapply(1 : nosim, function(i){
y <- x1 + rnorm(n, sd = .3)
c(coef(lm(y ~ x1))[2],
coef(lm(y ~ x1 + x2))[2],
coef(lm(y ~ x1 + x2 + x3))[2])
})
round(apply(betas, 1, sd), 5)
n <- 100; nosim <- 1000
x1 <- rnorm(n); x2 <- x1/sqrt(2) + rnorm(n) /sqrt(2)
x3 <- x1 * 0.95 + rnorm(n) * sqrt(1 - 0.95^2);
betas <- sapply(1 : nosim, function(i){
y <- x1 + rnorm(n, sd = .3)
c(coef(lm(y ~ x1))[2],
coef(lm(y ~ x1 + x2))[2],
coef(lm(y ~ x1 + x2 + x3))[2])
})
round(apply(betas, 1, sd), 5)
y <- x1 + rnorm(n, sd = .3)
a <- summary(lm(y ~ x1))$cov.unscaled[2,2]
c(summary(lm(y ~ x1 + x2))$cov.unscaled[2,2],
summary(lm(y~ x1 + x2 + x3))$cov.unscaled[2,2]) / a
temp <- apply(betas, 1, var); temp[2 : 3] / temp[1]
data(swiss);
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
a <- summary(fit1)$cov.unscaled[2,2]
fit2 <- update(fit, Fertility ~ Agriculture + Examination)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education)
c(summary(fit2)$cov.unscaled[2,2],
summary(fit3)$cov.unscaled[2,2]) / a
library(car)
fit <- lm(Fertility ~ . , data = swiss)
vif(fit)
sqrt(vif(fit)) #I prefer sd
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education)
fit5 <- update(fit, Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality)
anova(fit1, fit3, fit5)
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2, -1, 1), runif(n/2, -1, 1));
beta0 <- 0; beta1 <- 2; tau <- 0; tau1 <- -4; sigma <- .2
y <- beta0 + x * beta1 + t * tau + t * x * tau1 + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t + I(x * t))
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2] + coef(fit)[4], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
p <- 1
n <- 100; x2 <- runif(n); x1 <- p * runif(n) - (1 - p) * x2
beta0 <- 0; beta1 <- 1; tau <- 4 ; sigma <- .01
y <- beta0 + x1 * beta1 + tau * x2 + rnorm(n, sd = sigma)
plot(x1, y, type = "n", frame = FALSE)
abline(lm(y ~ x1), lwd = 2)
co.pal <- heat.colors(n)
points(x1, y, pch = 21, col = "black", bg = co.pal[round((n - 1) * x2 + 1)], cex = 2)
plot3d(x1, x2, y)
install.packages("grl")
install.packages("rgl")
plot3d(x1, x2, y)
plot(resid(lm(x1 ~ x2)), resid(lm(y ~ x2)), frame = FALSE, col = "black", bg = "lightblue", pch = 21, cex = 2)
abline(lm(I(resid(lm(x1 ~ x2))) ~ I(resid(lm(y ~ x2)))), lwd = 2)
n <- 100; x <- rnorm(n); y <- x + rnorm(n, sd = .3)
plot(c(-3, 6), c(-3, 6), type = "n", frame = FALSE, xlab = "X", ylab = "Y")
abline(lm(y ~ x), lwd = 2)
points(x, y, cex = 2, bg = "lightblue", col = "black", pch = 21)
points(0, 0, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(0, 5, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(5, 5, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(5, 0, cex = 2, bg = "darkorange", col = "black", pch = 21)
x <- c(10, rnorm(n)); y <- c(10, c(rnorm(n)))
plot(x, y, frame = FALSE, cex = 2, pch = 21, bg = "lightblue", col = "black")
abline(lm(y ~ x))
fit <- lm(y ~ x)
round(dfbetas(fit)[1 : 10, 2], 3)
round(hatvalues(fit)[1 : 10], 3)
x <- rnorm(n); y <- x + rnorm(n, sd = .3)
x <- c(5, x); y <- c(5, y)
plot(x, y, frame = FALSE, cex = 2, pch = 21, bg = "lightblue", col = "black")
fit2 <- lm(y ~ x)
abline(fit2)
round(dfbetas(fit2)[1 : 10, 2], 3)
round(hatvalues(fit2)[1 : 10], 3)
dat <- read.table('http://www4.stat.ncsu.edu/~stefanski/NSF_Supported/Hidden_Images/orly_owl_files/orly_owl_Lin_4p_5_flat.txt', header = FALSE)
pairs(dat)
summary(lm(V1 ~ . -1, data = dat))$coef
####Residual plot, pvalues significant, oh really?
fit <- lm(V1 ~ . - 1, data = dat); plot(predict(fit), resid(fit), pch = '.')
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
fit <- lm(y ~ x1); plot(fit)
data(mtcars)
x2<-mtcars$wt
x1<-(mtcars$am)
y<-mtcars$mpg
boxplot(y~x,data=mtcars, names=c("Automatic","Manual"),main="MPG per Transmission", xlab="Transmission", ylab="MPG",col=(c("salmon","lightblue")))
data(mtcars)
x2<-mtcars$wt
x1<-(mtcars$am)
y<-mtcars$mpg
boxplot(y~x,data=mtcars, names=c("Automatic","Manual"),main="MPG per Transmission", xlab="Transmission", ylab="MPG",col=(c("salmon","lightblue")))
data(mtcars)
x2<-mtcars$wt
x1<-(mtcars$am)
y<-mtcars$mpg
boxplot(y~x1,data=mtcars, names=c("Automatic","Manual"),main="MPG per Transmission", xlab="Transmission", ylab="MPG",col=(c("salmon","lightblue")))
data(mtcars)
x2<-mtcars$wt
x1<-(mtcars$am)
y<-mtcars$mpg
boxplot(y~x1,data=mtcars, names=c("Automatic","Manual"),main="MPG per Transmission", xlab="Transmission", ylab="MPG",col=(c("salmon","lightblue")))
par(mfrow = c(2, 2))
fit <- lm(y ~ x1); plot(fit)
par(mfrow = c(2, 2))
fit <- lm(y ~ x1); plot(fit)$[,3]
plot(x1, y, pch=21,col="black",bg=topo.colors(n)[x2], frame = FALSE, cex = 1.5)
title('Unadjusted, color is X2')
abline(lm(y ~ x1), lwd = 2)
####This is showing only x1 to y (excluding x2)
plot(resid(lm(x1 ~ x2)), resid(lm(y ~ x2)), pch = 21, col = "black", bg = "lightblue", frame = FALSE, cex = 1.5)
title('Adjusted')
abline(0, coef(lm(y ~ x1 + x2))[2], lwd = 2)
install.packages("Shiny")
install.packages("shiny")
library(shiny)
library(swirl)
swirl()
swirl()
swirl()
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit<-lm(child~parent, galton)
summary(fit)
fit$residuals
mean(fit$residuals)
cov(fit$residuals, galton$parent)
fit$coef[1]
ols.ic <- fit$coef[1]
ols.slope<-fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
varchild<-var(galton$children)
varchild<-var(galton$child)
varChild <- var(galton$child)
varRes<-var(fit$residuals)
varEst<-var(est(ols.slope,ols.ic))
all.equal(varChild, sum(varRes,varEst))
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist,
| attenu)
efit <- lm(accel ~ mag+dist,attenu)
mean(efit$residual)
mean(efit$residuals)
cov(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
cor(galton$parent,galton$child)
cor(gpa_nor,gch_nor)
l_nor<-lm(galton$child~galton$parent)
l_nor <- lm(gch_nor ~ gpa_nor)
####Graphs of Marginal Info - child data set regardless of parent info and vice versa
library(UsingR); data(galton); library(reshape); long <- melt(galton)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
library(UsingR); data(galton); library(reshape); library(ggplot2);long <- melt(galton)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
library(manipulate)
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour = "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour = "black", binwidth=1)
g <- g + geom_vline(xintercept = mean(galton$child), size = 3)
g
mean(galton$child)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w(x-mean(x))^2)
w(x-mean(x))^2
sum(w*(x-mean(x))^2)
x-mean(x)
mu(mean(x))
mu<-mean(x)
sq<-(x-mu)^2
w*sq
wsq<-w*sq
sum(wsq)
sum(w*(x-.0025^2)
)
sum(w*(x-.0025^2))
sum(w*(x-.3^2))
sum(w*(x-.1.077^2))
sum(w*(x-.300^2))
sum(w*(x-1.077^2))
sum(w*(x-.1471^2))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mu1<-x-.0025
musq<-mu1^2
sum(w*musq)
mu2<-x-.300
musq<-mu2^2
sum(w*musq)
mu3<-x-.1.077
mu3<-x-1.077
musq<-mu3^2
sum(w*musq)
mu4<-x-.1471
musq<-mu4^2
sum(w*musq)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
num<-sum(y*x)
den<-sum(x^2)
num/den
fit<-lm(mpg~wt,mtcars)
fit$coefficient
cor<-.5
sdx<-.5y
sdx<-.5*y
cor*sd(y)/sdx
cor*sd(y1)/sdx
sd(y)/y
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x-mean(x)
sd(x)
x/(sd(x))
mean(x)
xbar<-mean(x)
(x-xbar)/sd(x)
11.42-.73
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit<-lm(y~x)
fit$coefficients
x<-(-1,0,1)
x<-c(-1,0,1)
y<-c(-2,0,2)
fit<-lm(y~x)
fit$coefficients
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x2 <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mu=mean(x)
sq<-(x-mu)^2
x2sq<-x2(sq)
x2sq<-x2*(sq)
sum(x2sq)
mean(x)
##Manipulate##
library(manipulate)
library(UsingR)
data(galton)
manipulate(plot(1:x),x=slider(1,100))
myHist<-function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu,mu),c(0,150),col="red",lwd=5)
mse<-mean((galton$child-mu)^2)
text(63,150,paste("mu= ",mu))
text(63,140,paste("MSE= ",round(mse,2)))
}
manipulate(myHist(mu), mu=slider(62,74,Step=.5))
manipulate(myHist(mu), mu=slider(62,74,step=.5))
install.packages("manipulate")
install.packages("manipulate")
install.packages("C:\Program Files\RStudio\R\library\manipulate")
install.packages("C:/Program Files/RStudio/R/library/manipulate")
install.packages('Manipulate')
library(manipulate)
manipulate(myHist(mu), mu=slider(62,74,step=.5))
library(devtools)
install_github("ramnathv/rCharts@dev")
install.packages("base64enc")
install_github("ramnathv/rCharts@dev")
setwd("~/Training/DataScienceClass/DataProducts/Week1")
require(rCharts)
haireye=as.data.frame(HairEyeColor)
n1<-nPlot(Freq~Hair,group='Eye',type='multiBarChart',
data=subset(haireye,Sex==Male))
n1$save('fig/n1.html',cdn=TRUE)
cat('<iframe src="fig/n1.html" width=100%,height=600></iframe>')
n1<-nPlot(Freq~Hair,group='Eye',type='multiBarChart',
data=subset(haireye,Sex=='Male'))
n1$save('fig/n1.html',cdn=TRUE)
n1$save('fig/n1.html',cdn=TRUE)
n1
nPlot(Freq~Hair,group='Eye',type='multiBarChart',
data=subset(haireye,Sex=='Male'))
install.packages("slidify")
library(slidify)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
n1<-nPlot(Freq~Hair,group='Eye',type='multiBarChart',
data=subset(haireye,Sex=='Male'))
n1$save('fig/n1.html',cdn=TRUE)
cat('<iframe src="fig/n1.html" width=100%,height=600></iframe>')
n1$save('fig/n1.html',cdn=TRUE)
n1
cat('<iframe src="fig/n1.html" width=100%,height=600></iframe>')
nPlot(Freq~Hair,group='Eye',type='multiBarChart',
data=subset(haireye,Sex=='Male'))
names(iris)=gsub("\\.","",names(iris))
r1<-rPlot(SepalLength~SepalWidth|Species,data=iris,color='Species',type='point')
r1$save('fig/r1.html',cdn=TRUE)
cat('<iframe src="fig/r1.html" width=100%, height=600></iframe>')
r2<-rPlot(SepalLength~SepalWidth|Species,data=iris,color='Species',type='bar')
r2$save('fig/r1.html',cdn=TRUE)
cat('<iframe src="fig/r2.html" width=100%, height=600></iframe>')
names(iris)=gsub("\\.","",names(iris))
r1<-rPlot(SepalLength~SepalWidth|Species,data=iris,color='Species',type='point')
r1$save('fig/r1.html',cdn=TRUE)
cat('<iframe src="fig/r1.html" width=100%, height=600></iframe>')
r2<-rPlot(SepalLength~SepalWidth|Species,data=iris,color='Species',type='bar')
r2$save('fig/r2.html',cdn=TRUE)
cat('<iframe src="fig/r2.html" width=100%, height=600></iframe>')
r2<-rPlot(Freq~Hair|Eye,color='Eye', data=hair_eye,type='bar')
r1$save('fig/r2.html',cdn=TRUE)
cat('<iframe src="fig/r2.html" width=100%,height=600></iframe>')
r1<-rPlot(SepalLength~SepalWidth|Species,data=iris,color='Species',type='point')
r1$save('fig/r1.html',cdn=TRUE)
cat('<iframe src="fig/r1.html" width=100%, height=600></iframe>')
r2<-rPlot(Freq~Hair|Eye, color='Eye', data=hair_eye,type='bar')
hair_eye=as.data.frame(HairEyeColor)
r2<-rPlot(Freq~Hair|Eye, color='Eye', data=hair_eye,type='bar')
r2$save('fig/r2.html',cdn=TRUE)
cat('<iframe src="fig/r2.html" width=100%,height=600></iframe>')
data(economics,package="ggplot2")
econ<-transform(economics,date=as.character(date))
m1<-mPlot(x="date",y=c("psavert","uempmed"),type="Line",data=econ)
m1$set(pointSize=0, lineWidth=1)
m1$save('fig/m1.html',cdn=TRUE)
cat('<iframe src="fig/m1.html" width=100%,height=600></iframe>')
require(reshape2)
usexp<-melt(USPersonalExpenditure)
names(usexp)[1:2]=c("category","year")
x1<-xPlot(value~year,group="category",data=usexp,type="line-dotted")
x1$save('fig/x1.html',cdn=TRUE)
cat('<iframe src="fig/m1.html" width=100%,height=600></iframe>')
cat('<iframe src="fig/m1.html" width=100%,height=600></iframe>')
cat('<iframe src="fig/x1.html" width=100%,height=600></iframe>')
map3<-Leaflet$new()
map3$setView(c(51.505,-0.09),zoom=13)
map3$marker(c(51.505,-0.09),bindPopup="<p> Hi. I am a popup</p>")
map3$marker(c(51.505,-0.09),bindPopup="<p> Hi. I am another popup</p>")
map3$save('fig/map3.html',cdn=TRUE)
cat('<iframe src="fig/map3.html" width=100%,height=600></iframe>')
map3<-Leaflet$new()
map3$setView(c(51.505,-0.09),zoom=13)
map3$marker(c(51.505,-0.09),bindPopup="<p> Hi. I am a popup</p>")
map3$marker(c(51.505,-0.083),bindPopup="<p> Hi. I am another popup</p>")
map3$save('fig/map3.html',cdn=TRUE)
cat('<iframe src="fig/map3.html" width=100%,height=600></iframe>')
usp=reshape2::melt(USPersonalExpenditure)
usp$Var2<-as.numeric(as.POSIXct(paste0(usp$Var2,"-01-01")))
p4<-Rickshaw$new()
p4$layer(value~Var2,group ="Var1",data=usp,type="area",width=560)
p4$set(slider=TRUE)
p4$save('fig/p4.html',cdn=TRUE)
cat('<iframe src="fig/p4.html" width=100%,height=600></iframe>')
h1<-hplot(x="WrHnd",y="NW.Hnd",data=MASS::survey, type=c("line",
"bubble","scatter"),group="Clap",size="Age")
h1$save('fig/h1.html',cdn=TRUE)
cat('<iframe src="fig/h1.html" width=100%,height=600></iframe>')
h1<-hPlot(x="WrHnd",y="NW.Hnd",data=MASS::survey, type=c("line",
"bubble","scatter"),group="Clap",size="Age")
h1$save('fig/h1.html',cdn=TRUE)
cat('<iframe src="fig/h1.html" width=100%,height=600></iframe>')
h1<-hPlot(x="Wr.Hnd",y="NW.Hnd",data=MASS::survey, type=c("line",
"bubble","scatter"),group="Clap",size="Age")
h1$save('fig/h1.html',cdn=TRUE)
cat('<iframe src="fig/h1.html" width=100%,height=600></iframe>')
h1<-hPlot(x="Wr.Hnd",y="NW.Hnd",data=MASS::survey, type=c("line","bubble","scatter"),group="Clap",size="Age")
h1$save('fig/h1.html',cdn=TRUE)
suppressPackageStartupMessages(library(googleVis))
install.packages("googleVis")
##googleVis
suppressPackageStartupMessages(library(googleVis))
M<-gvisMotionChart(Fruits,"Fruit","Year",options=list(width=600,height=400))
print(M,"chart")
print(M,"chart")
M$save('fig/M.html',cdn=TRUE)
n1
print(M,"chart")
print(M,"chart")
suppressPackageStartupMessages(library(googleVis))
M<-gvisMotionChart(Fruits,"Fruit","Year",options=list(width=600,height=400))
print(M,"chart")
plot(M)
plot(G)
G<-gvisGeoChart(Exports,locationvar="Country",colorvar="Profit",
options=list(width=600,height=400))
print(G,"chart")
plot(G)
G2<-gvisGeoChart(Exports,locationvar="Country",colorvar="Profit",
options=list(width=600,height=400),region="150")
print(G2,"chart")
plot(G2)
G2<-gvisGeoChart(Exports,locationvar="Country",colorvar="Profit",
options=list(width=600,height=400,region="150"))
print(G2,"chart")
plot(G2)
G<-gvisGeoChart(Exports,locationvar="Country",colorvar="Profit",
options=list(width=200,height=100))
T1<-gvisTable(Exports,options=list(width=200,height=270))
M<-gvisMotionChart(Fruits,"Fruit","Year",options=list(width=400,height=370))
GT<-gvisMerge(G,T1,horizontal=FALSE)
GTM<-gvisMerge(GT,M,horizontal=TRUE,tableOptions="bgcolor=\#CCCCCC\" cellspacing=10")
GTM<-gvisMerge(GT,M,horizontal=TRUE,tableOptions="bgcolor=\#CCCCCC\ cellspacing=10")
GTM<-gvisMerge(GT,M,horizontal=TRUE,tableOptions="bgcolor=\"#CCCCCC\" cellspacing=10")
plot(GTM)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
data(airquality)
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
d <- data.frame(airquality, stringsAsFactors = FALSE); print(d)
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(name='pamwoodcoursera', token='B49A4F51B61C4682809A0CAEB4FA39AB', secret='I2L6I7okpQQPeDmzwnz2hmTHBNqeK7bqXUTG/Fji')
runApp("App-4")
library(shiny)
runApp("App-4")
install_github("ropensci/plotly")
##PLOTLY
library(plotly)
library(RCurl)
library(bitops)
library(RJSONIO)
library(gglplot2)
library(ggplot2)
##PLOTLY
library(plotly)
load("courseraData.rda")
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
library(slidify)
setwd("C:\Users\pame5815\Documents\Training\DataScienceClass\DataProducts\Week2\sample\project")
setwd("C:/Users/pame5815/Documents/Training/DataScienceClass/DataProducts/Week2/sample/project")
author("first_deck")
slidify('index.Rmd')
library(knitr)
browseURL('index.html')
setwd("C:/Users/pame5815/Documents/Training/DataScienceClass/DataProducts/Week2")
